{"version":3,"file":"helpers.js","sourceRoot":"","sources":["../src/helpers.ts"],"names":[],"mappings":"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","sourcesContent":["// Hot Module Replacement\nexport function bootloader(main: any) {\n  switch (document.readyState) {\n    case 'loading':\n      document.addEventListener('DOMContentLoaded', () => main());\n      break;\n    case 'interactive':\n    case 'complete':\n    default:\n      main();\n  }\n}\n\n\n// create new elements\nexport function createNewHosts(cmps: any) {\n    const components = cmps.map((componentNode: any) => {\n      const newNode = document.createElement(componentNode.tagName);\n      // display none\n      const parentNode = componentNode.parentNode;\n      parentNode.insertBefore(newNode, componentNode);\n      return { newNode, orginalCmp: componentNode };\n    });\n    return () => {\n        components.forEach((cmp:any) => {\n            cmp.orginalCmp.remove();\n        });\n    }\n}\n\n\n// remove old styles\nexport function removeNgStyles() {\n    var docHead = document.head;\n    Array.prototype.slice.call(docHead.querySelectorAll('style'), 0)\n      .filter((style:any) => style.innerText.indexOf('_ng') !== -1)\n      .map((el:any) => docHead.removeChild(el));\n}\n\n/**\n * get input values\n * \n * Extended by: Gabriel Schuster <github.com@actra.de>\n * Now gets values of inputs (including \"checked\" status radios, checkboxes), textareas and selects (including multiselects)\n * Tries to identify the elements as exact as possible, falls back to numeric index when identification fails\n */\nexport function getInputValues() {\n    const inputs = document.querySelectorAll('input, textarea, select');\n    \n    return Array.prototype.slice.call(inputs).map((input: any) => {\n        let store:\n            {\n                tag:     string,\n                'type':  string,\n                id:      string,\n                name:    string,\n                value:   string,\n                checked: boolean,\n                options: {value: string, selected: boolean}[]\n            }\n            =\n            {\n                tag:     input.tagName.toLowerCase(),\n                'type':  null,\n                id:      'string' === typeof input.id && input.id.length ? input.id : null,\n                name:    'string' === typeof input.name && input.name.length ? input.name : null,\n                value:   '',\n                checked: false,\n                options: []\n            };\n        \n        if('input' === input.tagName.toLowerCase() || 'textarea' === input.tagName.toLowerCase()) {\n            Object.assign(store, {'type': input.type});\n            \n            if('input' === input.tagName.toLowerCase() && ('checkbox' === input.type || 'radio' === input.type)) {\n                return Object.assign(store, {value: input.value, checked: !!input.checked});\n            }\n            else if('input' === input.tagName.toLowerCase() && ('image' === input.type || 'button' === input.type || 'submit' === input.type || 'reset' === input.type)) {\n                // These types don't need any config and won't be set later but they match \"input\"\n                \n                return store;\n            }\n            else {\n                return Object.assign(store, {value: input.value});\n            }\n        }\n        else if('select' === input.tagName.toLowerCase()) {\n            let options: {value: string, selected: boolean}[] = [];\n            \n            input.childNodes.forEach((option: any, i: number) => {\n                options.push({\n                    value:    'string' === typeof option['value'] && option['value'].length ? option['value'] : null,\n                    selected: !!option['selected']\n                });\n            });\n            \n            return Object.assign(store, {options: options});\n        }\n        \n        return store;\n    });\n}\n\n/**\n * set input values\n * \n * Extended by: Gabriel Schuster <github.com@actra.de>\n */\nexport function setInputValues($inputs: any) {\n    const inputs = document.querySelectorAll('input, textarea');\n    \n    $inputs.forEach((store: any, i: number) => {\n        if('input' === store.tag || 'textarea' === store.tag) {\n            if('input' === store.tag && ('checkbox' === store.type || 'radio' === store.type)) {\n                let selector = 'input' + (null !== store.id ? '#' + store.id : '') + '[type=\"' + store.type + '\"]' + (null !== store.name ? '[name=\"' + store.name + '\"]' : '') +\n                               '[value=\"' + store.value + '\"]';\n                let element  = document.body.querySelector(selector);\n                \n                if(element && !!store.checked) {\n                    element['checked'] = 'checked';\n                    \n                    element.dispatchEvent(new CustomEvent('input', {detail: element['checked']}));\n                }\n            }\n            else if('input' === store.tagName.toLowerCase() && ('image' === store.type || 'button' === store.type || 'submit' === store.type || 'reset' === store.type)) {\n                // These types don't need any config and thus need no update, they only were stored because they match \"input\"\n            }\n            else {\n                if(null === store.id && null === store.name) {\n                    if(store.value.length && inputs[i] && inputs[i].tagName.toLowerCase() === store.tag && ('textarea' === store.tag || inputs[i].getAttribute('type') === store.type) &&\n                       ('string' !== typeof inputs[i].id || !inputs[i].id.length) && ('string' !== typeof inputs[i].getAttribute('name') || !inputs[i].getAttribute('name').length)) {\n                        inputs[i]['value'] = store.value;\n                        \n                        inputs[i].dispatchEvent(new CustomEvent('input', {detail: inputs[i]['value']}));\n                    }\n                }\n                else {\n                    let selector = 'input' + (null !== store.id ? '#' + store.id : '') + ('input' === store.tag ? '[type=\"' + store.type + '\"]' : '') +\n                                   (null !== store.name ? '[name=\"' + store.name + '\"]' : '');\n                    let element  = document.body.querySelector(selector);\n                    \n                    if(element && store.value.length) {\n                        element['value'] = store.value;\n                        \n                        element.dispatchEvent(new CustomEvent('input', {detail: element['value']}));\n                    }\n                }\n            }\n        }\n        else if('select' === store.tag) {\n            let select: any = null;\n            \n            if(null === store.id && null === store.name) {\n                if(inputs[i] && inputs[i].tagName.toLowerCase() === store.tag && ('string' !== typeof inputs[i].id || !inputs[i].id.length) &&\n                   ('string' !== typeof inputs[i].getAttribute('name') || !inputs[i].getAttribute('name').length)) {\n                    select = inputs[i];\n                }\n            }\n            else {\n                let selector = 'select' + (null !== store.id ? '#' + store.id : '') + (null !== store.name ? '[name=\"' + store.name + '\"]' : '');\n                let element  = document.body.querySelector(selector);\n                if(element) {\n                    select = element;\n                }\n            }\n            \n            if(select) {\n                store.options.forEach((storedOption: any, j: number) => {\n                    let option: any = select.querySelector('option[value=\"' + storedOption.value + '\"]');\n                    \n                    if(!option && select.childNodes[j] && ('string' !== typeof select.childNodes[j]['value'] || !select.childNodes[j]['value'].length)) {\n                        option = select.childNodes[j];\n                    }\n                    if(option && !!storedOption.selected) {\n                        option['selected'] = 'selected';\n                        \n                        option.dispatchEvent(new CustomEvent('input', {detail: option['selected']}));\n                    }\n                });\n            }\n        }\n    });\n}\n\n// get/set input values\nexport function createInputTransfer() {\n    const $inputs = getInputValues();\n    return function restoreInputValues() {\n        setInputValues($inputs);\n    }\n}\n"]}